# VASProcar Copyright (C) 2023
# GNU GPL-3.0 license

# ==============================================================================================
# do not edit ### do not edit ### do not edit ### do not edit ### do not edit ### do not edit ##
# ==============================================================================================
param_estim = 1
#--------------
run = main_dir + '_VASP/' + '_info_b.py'
exec(open(run).read())
#---------------------
ion_orb = [[[0]*(n_orb+1) for i in range(ni+1)] for j in range(6+1)]  #  ion_orb[reg][ni][n_orb]
label_reg = ['null']*(6)
range_ion = ['null']*(6)
l_symmetry = 0
esc_color = 0
# ==============================================================================================
# do not edit ### do not edit ### do not edit ### do not edit ### do not edit ### do not edit ##
# ==============================================================================================


################################################################
# inform the DFT package: ======================================
# [0] VASP - Vienna Ab initio Simulation Package ===============
# [1] QE - Quantum Espresso ====================================
################################################################
dft_package = 0

if (dft_package == 0): DFT = '_VASP/'
if (dft_package == 1): DFT = '_QE/'



################################################################
# How many REGIONS do you want to analyze? =================== #
# ============ (A maximum of 6 REGIONS are allowed) ========== #
################################################################
n_reg = 2



################################################################
# Insert the label only of the REGIONS that will define ====== #
################################################################
label_reg[0] = 'null'    # 1st region label
label_reg[1] = 'null'    # 2st region label
label_reg[2] = 'null'    # 3st region label
label_reg[3] = 'null'    # 4st region label
label_reg[4] = 'null'    # 5st region label
label_reg[5] = 'null'    # 6st region label



################################################################
# Enter the range of ions for each REGION ==================== #
# ------------------------------------------------------------ #
# Examples:                                                    
# 15:27 28:36 37*                               
# 35:78                                         
# 9* 10:14 15*                                  
################################################################
range_ion[0] = '1:1'     # Range of ions of the 1st region
range_ion[1] = '1:1'     # Range of ions of the 2st region
range_ion[2] = '1:1'     # Range of ions of the 3st region
range_ion[3] = '1:1'     # Range of ions of the 4st region
range_ion[4] = '1:1'     # Range of ions of the 5st region
range_ion[5] = '1:1'     # Range of ions of the 6st region



################################################################
# Regarding the Plot of Bands, choose ==========================
# [0] Plot/Analyze all bands ===================================
# [1] Plot/Analyze selected bands ==============================
################################################################
esc_bands = 0

if (esc_bands == 1):     
   ################################################################
   # Select the bands to be analyzed using intervals:              
   # Type as in the examples below =============================== 
   # ------------------------------------------------------------- 
   # Bands can be added in any order ----------------------------- 
   # ------------------------------------------------------------- 
   # Examples: 
   # '35:42'                                                  
   # '1:15 27:69 18:19 76*'                         
   # '7* 9* 11* 13* 14:15'                         
   ################################################################
   bands_range = '1:1 2:2 3:3'  



################################################################ 
# with respect to energy, would you like? ======================
# [0] Use the default energy value from DFT output =============
# [1] Shift the Fermi level to 0.0 eV  =========================
################################################################ 
esc_fermi = 1



################################################################ 
# Do you want to modify the energy range to be plotted? ========
# [0] NOT                                                       
# [1] YES                                                       
################################################################
esc_range_E = 0

if (esc_range_E == 1):
   ################################################################ 
   # Enter the energy range to be plotted: ========================
   # Note: Enter the lowest and highest energy value to be plotted 
   #             in relation to the Fermi Level                    
   # --------------------------------------------------------------
   # Examples:                                                     
   # '-3.0 15.0'                                        
   # '-5.1 5.0'                                         
   ################################################################      
   range_E = '-1.0 1.0' 



################################################################## 
# Do you want to ignore contributions below a certain amount?    #
# [0] NOT                                                        #
# [1] YES                                                        #
##################################################################
esc_ignorar = 0

if (esc_ignorar == 1):
   ################################################################## 
   # Enter the minimum contribution amount to be plotted ========== #
   # Note: Enter a value between 0.0 and 1.0 ====================== #
   ##################################################################
   contrib_min = 0.1



################################################################
# Would you like to label the k-points?                         
# [0] DO NOT label the k-points  ===============================
# [1] highlight k-points present in KPOINTS file ===============
# [2] Customize: highlight and Label k-points   ================
################################################################ 
dest_k = 1

if (dest_k != 2):
   ################################################################
   # Would you like to choose k-axis units?                        
   # [1] 2pi/Param. (Param. in Angs.) =============================
   # [2] 1/Angs. ==================================================
   # [3] 1/nm.   ==================================================
   ################################################################
   Dimensao = 1 



################################################################
# Enter the weight/size of the spheres in the projection: ======
# Enter a value between 0.0 and 1.0 ============================
################################################################
peso_total = 1.0



################################################################
# Enter the transparency value to apply to the projections:     
# This option is useful for checking the overlap of orbitals.      
# Enter a value between 0.0 and 1.0 ============================
#===============================================================
# Hint: The higher the k-point density, the lower the ==========
#       transparency value used, start with 0.5 ================
################################################################
transp = 1.0



# ==============================================================================================
# do not edit ### do not edit ### do not edit ### do not edit ### do not edit ### do not edit ##
# ==============================================================================================
for i in range(1,(n_reg+1)):
       #-------------------
       reg_ion = range_ion[i-1].replace(':', ' ').replace('-', ' ').replace('*', ' *').split( )
       #-------------------------
       loop = int(len(reg_ion)/2)
       #--------------------------
       for j in range(1,(loop+1)):
           #-----------------------------
           loop_i = int(reg_ion[(j-1)*2])
           if (reg_ion[((j-1)*2) +1] == "*"):
              reg_ion[((j-1)*2) +1] = reg_ion[(j-1)*2]
           loop_f = int(reg_ion[((j-1)*2) +1])
           #----------------------------------------------------------------------------------------
           if ((loop_i > ni) or (loop_f > ni) or (loop_i < 0) or (loop_f < 0) or (loop_i > loop_f)):
              print (" ")
              print ("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
              print ("ERROR: The informed ion values are incorrect %%%%%%%%%%%%%")
              print ("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
              exit()
           #---------------------------------
           for p in range(loop_i,(loop_f+1)):
               for m in range (1,(n_orb+1)):                   
                   ion_orb[i][p][m] = 1    
# ==============================================================================================
# do not edit ### do not edit ### do not edit ### do not edit ### do not edit ### do not edit ##
# ==============================================================================================
